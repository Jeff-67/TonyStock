# Instructions

During interaction with the user, if you find anything reusable in this project (e.g. version of a library, model name), especially about a fix to a mistake you made or a correction you received, you should take note in the `Lessons` section in the `.cursorrules` file so you will not make the same mistake again.

You should also use the `.cursorrules` file as a scratchpad to organize your thoughts. When receiving a new task:
1. Review the scratchpad content
2. Clear old different task if necessary
3. Explain the new task
4. Plan the steps needed to complete the task
5. Use todo markers to track progress: [X] Done, [ ] Pending
6. Update progress when subtasks are completed

# Task-specific Instructions
1. News Analysis Tasks
   - Always reference `system_prompts.md` for the complete analysis framework
   - Follow the systematic search strategy outlined in the framework
   - Use the structured analysis approach for consistency
   - Ensure all analysis components are covered

# Tools Configuration

1. Environment Setup
   - Activate conda environment 'stock' before running tools
   - Use run_terminal_cmd for executing Python scripts
   - Set appropriate timeout values for web scraping

2. Data Collection & Analysis Tools
   a. search_engine.py
      - Command: conda activate stock && python -m tools.search_engine "search query" [--max-results N]
      - Quote multi-word queries
      - Default max results: 10
      - Uses DuckDuckGo with API/HTML fallback
      - Debug logging included
      - Returns URLs that should be passed to web_scraper.py for full content

   b. web_scraper.py
      - Command: conda activate stock && python -m tools.web_scraper [URLs...] [--max-concurrent N] [--debug]
      - Used after search_engine.py to get full content from URLs
      - URLs must be complete (with http:// or https://)
      - Quote URLs with special characters
      - Default max concurrent: 5
      - Timeout: 30s with auto-retry
      - Debug flag available

   c. read_pdf.py
      - Command: conda activate stock && python -m tools.read_pdf [pdf_path] [--model model_name]
      - Default model: gpt-4o
      - Outputs markdown in same directory

   d. llm_api.py
      - Supports OpenAI, Anthropic, and local models
      - Default models:
        * OpenAI: gpt-4o
        * Anthropic: claude-3-sonnet-20240229
        * Local: Qwen/Qwen2.5-32B-Instruct-AWQ

   e. market_data_fetcher.py
      - Command: conda activate stock && python -m tools.market_data_fetcher [symbols...] [options]
      - Features:
        * Fetches historical price and volume data
        * Supports multiple symbols
        * Flexible time intervals (1d, 1wk, 1mo)
        * Customizable date range
      - Options:
        * --interval: Data interval (1d, 1wk, 1mo)
        * --days: Number of days of historical data
        * --output/-o: Output file path
        * --format: Output format (json, csv)
        * --debug: Enable debug logging
      - Example:
        ```bash
        python -m tools.market_data_fetcher AAPL MSFT --interval 1d --days 30 --format csv
        ```

   f. financial_data_fetcher.py
      - Command: conda activate stock && python -m tools.financial_data_fetcher [symbols...] [options]
      - Features:
        * Fetches financial statements
        * Supports multiple symbols
        * Income statement, balance sheet, cash flow
        * Standardized data formatting
      - Options:
        * --statements: Statements to fetch (income, balance, cash)
        * --output/-o: Output file path
        * --format: Output format (json, csv)
        * --debug: Enable debug logging
      - Example:
        ```bash
        python -m tools.financial_data_fetcher AAPL --statements income balance --format json
        ```

## Lessons Learned
1. News Analysis
   - Always check news timestamps
   - Cross-validate important information
   - Consider source reliability
   - Track information updates

2. Framework Updates
   - Keep stock-specific instructions current
   - Refine search keywords based on results
   - Adjust analysis framework as needed
   - Document successful patterns

# Lessons Learned
1. Tool Usage
   - Always activate conda environment 'stock' before running tools (CRITICAL)
   - Handle timeouts and retries properly
   - Use correct character encoding
   - Follow proper file paths
   - Document API keys securely
   - Python Package Structure (Added 2024/01):
     * Always run scripts as modules from project root: `python -m tools.script_name`
     * Ensure `__init__.py` exists in all package directories
     * Don't run Python scripts directly from their containing directory
     * Example: Use `python -m tools.market_data_fetcher` instead of `python tools/market_data_fetcher.py`

2. Data Validation
   - Verify company identifiers
   - Cross-check market data
   - Validate historical trends
   - Monitor data freshness
   - Track source reliability

3. Analysis Improvements
   - Focus on quantifiable metrics
   - Consider industry context
   - Track leading indicators
   - Monitor competitive dynamics
   - Update assumptions regularly

4. Report Quality
   - Clear data visualization
   - Consistent terminology
   - Proper source citation
   - Regular updates
   - Actionable recommendations

5. Stock Analysis Best Practices
   - Information Hierarchy
     * Start with basic news for overall direction
     * Deep dive into technical/project details
     * Include market perspectives (e.g., foreign institutions)

   - Time Sensitivity
     * Always check news publication dates
     * Differentiate historical data from latest updates
     * Avoid outdated predictions/outlooks

   - Specificity
     * Use concrete numbers instead of vague descriptions
     * Include technical specifications when relevant
     * Provide exact project timelines and milestones

   - Multi-source Verification
     * Company statements (earnings calls)
     * Analyst reports
     * Industry news
     * Cross-reference multiple sources

   - Source Citation
     * Cite every major point
     * Include media name and article title
     * Enable readers to verify information

6. New Lessons from Recent Analysis (2024/01)
   - Data Organization
     * Present financial data in clear, structured format (e.g., using code blocks for numbers)
     * Group related metrics together (revenue, profit, growth rates)
     * Show year-over-year or quarter-over-quarter comparisons

   - Reference Management
     * Always include source URLs for key data points
     * Organize references by topic/category
     * Include publication dates for time-sensitive information

   - Analysis Structure
     * Start with high-level overview
     * Break down into specific components
     * Support each point with concrete data
     * Conclude with actionable insights

   - Risk Assessment
     * Consider both immediate and long-term impacts
     * Track policy changes and their effects
     * Monitor leading indicators (e.g., customer traffic, order rates)
     * Compare with industry trends

7. Financial Data Fetching (2024/03)
   - Data Reliability
     * Always check for empty dataframes before processing
     * Verify data consistency across different time periods
     * Handle missing values appropriately
     * Cross-validate critical financial metrics

   - Performance Optimization
     * Use appropriate time intervals for market data
     * Cache frequently accessed data
     * Implement rate limiting for API calls
     * Handle concurrent requests efficiently

   - Error Management
     * Log all API errors with context
     * Implement graceful fallbacks
     * Monitor rate limits
     * Track data quality issues

8. Stock Analysis Best Practices (Updated 2025/01)
   - Reference Management
     * ALWAYS cite sources for every major analysis point
     * Include publication date with each reference
     * Format: [Source Name, Date, "Article Title"]
     * Organize references by topic/category

   - Analysis Structure
     * Start with company fundamentals
     * Expand to industry chain analysis
     * Connect with macro environment
     * Support each point with concrete data

   - Information Depth
     * Don't stop at first layer of news
     * Search for related industry trends
     * Look for customer/supplier dynamics
     * Cross-reference multiple perspectives

   - Context Building
     * Link company performance with industry cycles
     * Connect customer plans with company outlook
     * Consider competitive landscape
     * Track policy and regulation impacts

9. Stock Analysis Best Practices (Updated 2025/01)
   - Comprehensive Framework Application
     * Follow structured analysis framework strictly
     * Start with industry analysis before company specifics
     * Connect market trends with company strategy
     * Analyze sustainability initiatives in detail

   - Data Integration
     * Combine financial metrics with strategic initiatives
     * Cross-reference market data with company announcements
     * Track transformation progress with concrete metrics
     * Monitor market share changes across regions

   - Sustainability Focus
     * Track specific environmental initiatives and their impact
     * Quantify emissions reduction achievements
     * Monitor compliance with international standards
     * Analyze green product development and adoption

   - Strategic Transformation Analysis
     * Document revenue mix changes
     * Track market share in different regions
     * Monitor progress in new business areas
     * Analyze impact on financial metrics

10. Research Methodology (Added 2025/01)
    - Sequential Information Gathering
      * Start with recent market data
      * Follow up with news and announcements
      * Deep dive into strategic initiatives
      * Cross-validate information from multiple sources

    - Tool Usage Optimization
      * Use market_data_fetcher for quantitative analysis
      * Leverage search_engine for recent developments
      * Apply web_scraper for detailed news content
      * Combine tools for comprehensive analysis

11. Supply Chain Analysis Best Practices (Added 2025/01)
    - Supply Chain Verification
      * Always verify exact timing of supply chain participation
      * Cross-check multiple sources for supply chain relationships
      * Differentiate between rumored and confirmed supplier status
      * Track the evolution of supplier relationships over time

    - Timeline Accuracy
      * Document when a company enters a supply chain
      * Note any changes in supplier tier status
      * Track product generations and participation
      * Verify historical supply relationships

    - Information Quality
      * Prioritize official announcements and certifications
      * Be cautious with market rumors and speculation
      * Distinguish between different product generations
      * Document the source and timing of supply chain information

12. Web Scraping Best Practices (Added 2025/01)
    - Timeout Settings
      * Use shorter timeout (30s instead of 60s)
      * Add retry mechanism with shorter delays
      * Monitor and log timeout issues
      * Implement graceful fallbacks

    - URL Handling
      * Verify URL encoding before scraping
      * Test with simpler URLs first
      * Handle different news site formats
      * Validate URL accessibility

    - Content Extraction
      * Focus on essential content
      * Remove unnecessary JavaScript execution
      * Optimize page load strategy
      * Improve error handling and logging

13. News Analysis Framework (Added 2025/01)
    - Systematic Approach
      * Gather news from multiple sources
      * Cross-validate key information
      * Categorize by importance level
      * Focus on material impacts

    - Priority Classification
      * High: Direct financial/operational impact
      * Medium: Strategic/long-term significance
      * Low: General updates/market commentary
      * Track changes in classification over time

    - Data Presentation
      * Lead with key metrics/numbers
      * Provide clear source attribution
      * Highlight year-over-year changes
      * Include relevant context

14. 新聞分析最佳實踐（Added 2025/01）
    - 數據驅動原則
      * 每個結論都需要具體數據支持
      * 設定可量化的觀察指標
      * 建立預測與驗證機制
      * 定期回顧預測準確度

    - 分析層次
      * 第一層：直接相關數據與事實
      * 第二層：產業鏈影響與關聯
      * 第三層：總體環境與長期趨勢
      * 各層次間需有明確的邏輯關聯

    - 戰略洞察
      * 基於數據提出合理推論
      * 建立清晰的因果關係
      * 提供可執行的觀察指標
      * 設定具體的目標值

    - 報告架構
      * 核心數據陳述
      * 戰略意涵分析
      * 量化預測與目標
      * 風險監控指標
      * 明確引用來源

11. 新聞分析最佳實踐 (Updated 2025/01)
    - 時效性驗證
      * 嚴格區分新聞發布時間
      * 特別注意財報數據的時間點
      * 追蹤事件發展的完整時間線
      * 避免混用不同時期的數據

    - 多維度交叉驗證
      * 結合公司公告與媒體報導
      * 對照產業研究機構數據
      * 比較不同分析師觀點
      * 驗證數據一致性

    - 重大事件追蹤
      * 建立事件完整脈絡
      * 關注後續發展影響
      * 評估對公司治理的影響
      * 監控市場反應

    - 市場預測整合
      * 區分短期與長期預測
      * 注意預測的前提假設
      * 追蹤預測準確度
      * 定期更新預測數據

12. 產業分析框架 (Added 2025/01)
    - 終端市場分類
      * 企業級市場：AI伺服器、資料中心
      * 消費性市場：PC、手機、遊戲機
      * 新興市場：AI PC、車用電子
      * 分別追蹤各市場動態

    - 技術發展追蹤
      * 製程技術進展
      * 效能指標演進
      * 新應用技術發展
      * 與競品技術比較

    - 供需結構變化
      * 分析供給端產能變化
      * 追蹤需求端庫存水位
      * 觀察價格變動趨勢
      * 評估供需平衡時點

15. 新聞搜索框架最佳實踐 (Added 2025/01)
    - 系統性搜索策略
      * 先確認當前時間，避免引用未來新聞
      * 建立多層次搜索框架
      * 交叉驗證不同來源資訊
      * 追蹤時間序列發展

    - 框架建構原則
      * 核心業務相關：公司本身、產品線、技術發展
      * 產業鏈動態：上下游、供需變化、競爭態勢
      * 終端市場：應用領域、市場規模、成長動能
      * 創新發展：新技術、新產品、新市場

    - 關鍵字組合策略
      * 使用 AND/OR 運算符建立精確搜索
      * 加入時間範圍限定詞
      * 排除干擾項（如-招聘-徵才）
      * 考慮同義詞和相關術語

    - 資訊分析原則
      * 依據重要性分級（高、中、低）
      * 標註時間和來源
      * 分析對基本面的影響
      * 提供具體觀察重點

16. 個股分析框架 (Added 2025/01)
    - 搜索範圍定義
      * 核心業務關鍵字
      * 上下游供應鏈
      * 終端應用市場
      * 技術發展路線

    - 時間維度管理
      * 最近1-2個月重要新聞
      * 過去6-12個月重大事件
      * 未來3-6個月關注重點

    - 影響程度評估
      * 直接影響基本面
      * 產業趨勢變化
      * 長期發展方向

    - 具體行動建議
      * 短期觀察指標
      * 中期發展方向
      * 長期投資價值

17. 新聞分析實戰經驗 (Added 2025/01/22)
    - 結構優化
      * 前半部分需更詳盡具體：新聞分類、產業鏈分析
      * 後半部分要精簡聚焦：風險、觀察重點
      * 確保前後文邏輯連貫性
      * 避免內容重複冗長

    - 內容精準度
      * 每個重點都需要具體數據支持
      * 風險因素要有明確影響程度
      * 觀察重點需訂定可量化指標
      * 時間維度要明確區分

    - 實用性提升
      * 避免籠統的描述性文字
      * 不提供投資建議，改為觀察重點
      * 各項指標需可追蹤、可驗證
      * 時效性資訊需標註日期

    - 分析深度
      * 新聞分類要區分重要性等級
      * 產業鏈分析需上下游完整
      * 風險評估要具體量化
      * 觀察重點按時間維度分類

18. 新聞分析最佳實踐 (Added 2025/01/24)
    - 資訊深度
      * 必須使用web_scraper獲取完整新聞內容
      * 不能只依賴新聞標題做判斷
      * 交叉驗證多個新聞來源
      * 注意新聞發布時間的時序性

    - 分析平衡
      * 正面因素需有具體數據支持
      * 負面因素要明確指出限制
      * 風險要分類詳細說明
      * 觀察指標要可追蹤

    - 風險分析架構
      * 技術風險：效能限制、平台依賴
      * 市場風險：採用不確定、需求波動
      * 營運風險：資源限制、實施挑戰
      * 財務風險：毛利壓力、投資需求
      * 供應鏈風險：元件依賴、產能限制
      * 商業模式風險：變現能力、客戶維繫

    - 時間維度
      * 短期（3個月內）：客戶導入、初期表現
      * 中期（3-6個月）：市場發展、競爭反應
      * 長期（6個月以上）：策略實現、商業永續

19. Python TypedDict Usage (Added 2025/02)
    - Dictionary Access
      * TypedDict returns regular dictionaries at runtime
      * Use dict['key'] instead of dict.key to access values
      * Cannot use attribute access (dot notation)
      * TypedDict only provides type hints during development
      * Remember it's still a regular dict when actually running

20. Python Type Hints Best Practices (Added 2025/02)
    - Protocol Implementation
      * Classes implementing a Protocol should explicitly inherit from it
      * Add type hints to collections containing Protocol implementations
      * Use explicit type annotations for Protocol-based collections
      * Ensure all Protocol methods are properly implemented

    - Type Hints for Collections
      * Use explicit type hints for collections of custom types
      * Specify full type information for dictionaries and lists
      * Avoid generic object or Any types when possible
      * Use TypeVar for generic type constraints

    - Initialization Patterns
      * Handle circular references by separating initialization
      * Create objects first with minimal dependencies
      * Set up complex dependencies after object creation
      * Update object state in a type-safe manner

# Scratchpad
